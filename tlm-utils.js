"use strict";var path=require("path");function mkdirs(e){return!!fs.existsSync(e)||(mkdirs(path.dirname(e))?(fs.mkdirSync(e),!0):void 0)}function isEmpty(e){return void 0===e||null==e||""===e.trim()}var TLM_PROJECT_INFO={type:"maid",namespace:"",namespace_path:"",textures_path:"",animation_path:"",lang_path:"",models_path:"",model_id:"",texture_name:"",version:"",pack_data:{}};function clearAll(){TLM_PROJECT_INFO={type:"maid",namespace:"",namespace_path:"",textures_path:"",animation_path:"",lang_path:"",models_path:"",model_id:"",texture_name:"",version:"",pack_data:{}}}var createNewPack=new Action("create_new_pack",{name:"创建资源包",description:"创建一个新的资源包文件夹",icon:"create",click:function(){createNewPackDialog.show()}}),createNewPackDialog=new Dialog({id:"create_new_pack",title:"请输入资源包相关参数",form:{packId:{label:"资源包 ID（必填）",type:"input",placeholder:"书写的字符和长度有一定要求"},line1:"_",packVersion:{label:"资源包版本（可选）",type:"input",placeholder:"格式推荐 1.0.0"},packIcon:{label:"资源包图标（可选）",type:"file",extensions:["png"],filetype:"PNG"}},onConfirm:function(e){let t,n=e.packId.toLowerCase().replace(/\s|-/g,"_");/^[\w.]+$/.test(n)?n.length<6?Blockbench.notification("资源包 ID 过短！","为避免冲突，资源包 ID 至少应为 6 个字符！"):(TLM_PROJECT_INFO.namespace=n,t=isEmpty(e.packVersion)?"1.0.0":e.packVersion,TLM_PROJECT_INFO.version=t,ElecDialogs.showOpenDialog(currentwindow,{properties:["openDirectory"]},(function(i){if(null==i)return;let o=`${i}/${n}-${t}`;mkdirs(o);let a=`${o}/assets/${n}`;mkdirs(a),TLM_PROJECT_INFO.namespace_path=a,mkdirs(a+"/animation"),TLM_PROJECT_INFO.animation_path=a+"/animation",mkdirs(a+"/lang"),TLM_PROJECT_INFO.lang_path=a+"/lang";let l=a+"/models/entity";mkdirs(l),TLM_PROJECT_INFO.models_path=l;let r=a+"/textures/entity";mkdirs(r),TLM_PROJECT_INFO.textures_path=r;fs.writeFileSync(o+"/pack.mcmeta",'{"pack":{"pack_format":3,"description":"Touhou Little Maid Resources Pack"}}'),isEmpty(e.packIcon)||fs.writeFileSync(o+"/pack.png",fs.readFileSync(e.packIcon)),createNewPackDialog.hide(),Blockbench.notification("资源包创建成功！",`已经在 ${i} 放置对应资源包`)}))):Blockbench.notification("资源包 ID 不合法！","资源包 ID 仅支持英文字母，下划线和英文点号！")}});function dateFormat(e,t="yyyy-MM-dd"){let n={"M+":e.getMonth()+1,"d+":e.getDate(),"h+":e.getHours(),"m+":e.getMinutes(),"s+":e.getSeconds(),"q+":Math.floor((e.getMonth()+3)/3),S:e.getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,(e.getFullYear()+"").substr(4-RegExp.$1.length)));for(let e in n)new RegExp("("+e+")").test(t)&&(t=t.replace(RegExp.$1,1===RegExp.$1.length?n[e]:("00"+n[e]).substr((""+n[e]).length)));return t}var english={};function addLanguageEntry(e,t){english[e]=t}function saveLanguageFile(){let e="";for(let t in english)e+=`${t}=${english[t]}\n`;fs.writeFileSync(TLM_PROJECT_INFO.lang_path+"/en_us.lang",e)}function reloadAndReadLanguage(){let e=TLM_PROJECT_INFO.lang_path+"/en_us.lang";if(english={},fs.existsSync(e)&&fs.statSync(e).isFile()){fs.readFileSync(e,"utf8").split(/\r?\n/).forEach((function(e){if(0!==e.indexOf("#")){let t=e.split("=",2);isEmpty(t[0])||isEmpty(t[1])||(english[t[0]]=t[1])}}))}}function checkDuplicateModelId(){let e=TLM_PROJECT_INFO.namespace,t=TLM_PROJECT_INFO.model_id,n=TLM_PROJECT_INFO.pack_data.model_list;if(isEmpty(t))return!1;if(null==n||0===n.length)return!1;for(let i in n)if(n[i].model_id===`${e}:${t}`)return!0;return!1}function addModelToList(e){let t=TLM_PROJECT_INFO.namespace,n=TLM_PROJECT_INFO.model_id,i=TLM_PROJECT_INFO.pack_data.model_list;if(!isEmpty(n))if(null!=i&&0!==i.length){for(let o in i)if(i[o].model_id===`${t}:${n}`)return void(i[o]=e);i.push(e)}else TLM_PROJECT_INFO.pack_data.model_list=[e]}function createCommonjsModule(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return commonjsRequire(e,null==t?n.path:t)}},n.exports),n.exports}function commonjsRequire(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var crypt=createCommonjsModule((function(e){!function(){var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&n.rotl(e,8)|4278255360&n.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=n.endian(e[t]);return e},randomBytes:function(e){for(var t=[];e>0;e--)t.push(Math.floor(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],n=0,i=0;n<e.length;n++,i+=8)t[i>>>5]|=e[n]<<24-i%32;return t},wordsToBytes:function(e){for(var t=[],n=0;n<32*e.length;n+=8)t.push(e[n>>>5]>>>24-n%32&255);return t},bytesToHex:function(e){for(var t=[],n=0;n<e.length;n++)t.push((e[n]>>>4).toString(16)),t.push((15&e[n]).toString(16));return t.join("")},hexToBytes:function(e){for(var t=[],n=0;n<e.length;n+=2)t.push(parseInt(e.substr(n,2),16));return t},bytesToBase64:function(e){for(var n=[],i=0;i<e.length;i+=3)for(var o=e[i]<<16|e[i+1]<<8|e[i+2],a=0;a<4;a++)8*i+6*a<=8*e.length?n.push(t.charAt(o>>>6*(3-a)&63)):n.push("=");return n.join("")},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\/]/gi,"");for(var n=[],i=0,o=0;i<e.length;o=++i%4)0!=o&&n.push((t.indexOf(e.charAt(i-1))&Math.pow(2,-2*o+8)-1)<<2*o|t.indexOf(e.charAt(i))>>>6-2*o);return n}};e.exports=n}()})),charenc={utf8:{stringToBytes:function(e){return charenc.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(charenc.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t},bytesToString:function(e){for(var t=[],n=0;n<e.length;n++)t.push(String.fromCharCode(e[n]));return t.join("")}}},charenc_1=charenc,sha1=createCommonjsModule((function(e){var t,n,i,o;t=crypt,n=charenc_1.utf8,i=charenc_1.bin,(o=function(e,o){var a=t.wordsToBytes(function(e){e.constructor==String?e=n.stringToBytes(e):"undefined"!=typeof Buffer&&"function"==typeof Buffer.isBuffer&&Buffer.isBuffer(e)?e=Array.prototype.slice.call(e,0):Array.isArray(e)||(e=e.toString());var i=t.bytesToWords(e),o=8*e.length,a=[],l=1732584193,r=-271733879,c=-1732584194,s=271733878,d=-1009589776;i[o>>5]|=128<<24-o%32,i[15+(o+64>>>9<<4)]=o;for(var u=0;u<i.length;u+=16){for(var m=l,p=r,h=c,f=s,g=d,_=0;_<80;_++){if(_<16)a[_]=i[u+_];else{var b=a[_-3]^a[_-8]^a[_-14]^a[_-16];a[_]=b<<1|b>>>31}var y=(l<<5|l>>>27)+d+(a[_]>>>0)+(_<20?1518500249+(r&c|~r&s):_<40?1859775393+(r^c^s):_<60?(r&c|r&s|c&s)-1894007588:(r^c^s)-899497514);d=s,s=c,c=r<<30|r>>>2,r=l,l=y}l+=m,r+=p,c+=h,s+=f,d+=g}return[l,r,c,s,d]}(e));return o&&o.asBytes?a:o&&o.asString?i.bytesToString(a):t.bytesToHex(a)})._blocksize=16,o._digestsize=20,e.exports=o})),saveNewMaidModelDialog=new Dialog({id:"save_new_maid_model_dialog",title:"请输入模型相关参数",form:{modelId:{label:"模型 ID（必填）",type:"input",placeholder:"仅支持小写英文字符和 . 和 _"},modelName:{label:"模型名称（必填）",type:"input",placeholder:"建议使用英文描述"},line1:"_",modelDesc:{label:"模型描述（可选）",type:"input",placeholder:"留空表示不填写任何描述"},renderItemScale:{label:"渲染成物品时的大小",type:"number",value:1,min:.1,max:2,step:.05},renderEntityScale:{label:"渲染成实体时的大小",type:"number",value:1,min:.7,max:1.3,step:.05},showHata:{label:"显示旗指物",type:"checkbox",value:!0},showBackpack:{label:"显示背包",type:"checkbox",value:!0},canHoldTrolley:{label:"持有拉杆箱",type:"checkbox",value:!0},canHoldVehicle:{label:"持有载具",type:"checkbox",value:!0},canRidingBroom:{label:"骑乘扫帚",type:"checkbox",value:!0},showCustomHead:{label:"显示头颅",type:"checkbox",value:!0},egg:{label:"彩蛋（可选）",type:"input",placeholder:"留空表示不设置彩蛋"},encryption:{label:"彩蛋是否加密",type:"checkbox",value:!1},animation:{label:"动画脚本（可选）",type:"file",extensions:["blockbench"],filetype:"JS"}},onConfirm:function(e){let t=TLM_PROJECT_INFO.namespace,n={},i={},o=e.modelId.toLowerCase().replace(/\s|-/g,"_");if(/^[\w.]+$/.test(o))if(saveNewMaidModelDialog.form.modelId.value=e.modelId,TLM_PROJECT_INFO.model_id=o,TLM_PROJECT_INFO.texture_name=o+".png",n.model_id=`${t}:${o}`,isEmpty(e.modelName))Blockbench.notification("模型名称不能为空","请输入一个可辨识的英文模型名称！");else{if(i[`model.${t}.${o}.name`]=e.modelName,saveNewMaidModelDialog.form.modelName.value=e.modelName,isEmpty(e.modelDesc)||(n.description=[`{model.${t}.${o}.desc}`],i[`model.${t}.${o}.desc`]=e.modelDesc,saveNewMaidModelDialog.form.modelDesc.value=e.modelDesc),1!==e.renderItemScale&&(n.render_item_scale=e.renderItemScale,saveNewMaidModelDialog.form.renderItemScale.value=e.renderItemScale),1!==e.renderEntityScale&&(n.render_entity_scale=e.renderEntityScale,saveNewMaidModelDialog.form.renderEntityScale.value=e.renderEntityScale),e.showHata||(n.show_hata=!1,saveNewMaidModelDialog.form.showHata.value=!1),e.showBackpack||(n.show_backpack=!1,saveNewMaidModelDialog.form.showBackpack.value=!1),e.canHoldTrolley||(n.can_hold_trolley=!1,saveNewMaidModelDialog.form.canHoldTrolley.value=!1),e.canHoldVehicle||(n.can_hold_vehicle=!1,saveNewMaidModelDialog.form.canHoldVehicle.value=!1),e.canRidingBroom||(n.can_riding_broom=!1,saveNewMaidModelDialog.form.canRidingBroom.value=!1),e.showCustomHead||(n.show_custom_head=!1,saveNewMaidModelDialog.form.showCustomHead.value=!1),!isEmpty(e.egg)){let t=e.egg;e.encryption&&(t=sha1(e.egg)),n.easter_egg={encrypt:e.encryption,tag:t}}if(!isEmpty(e.animation)){let i=e.animation,o=pathToName(i).toLowerCase().replace(/\s|-/g,"_");n.animation=[`${t}:animation/${o}.js`]}checkDuplicateModelId()?Blockbench.showMessageBox({title:"检查到当前 ID 和已有模型 ID 重复",message:"是否继续进行保存？<br>这会覆盖掉同名模型的相关数据！",confirm:0,cancel:1,buttons:["确认覆盖","取消"]},(function(t){0===t&&(saveModel(n,e.animation,i,"maid_model"),saveNewMaidModelDialog.hide())})):(saveModel(n,e.animation,i,"maid_model"),saveNewMaidModelDialog.hide())}else Blockbench.notification("模型 ID 不合法！","模型 ID 仅支持英文字母，下划线和英文点号！")}});function saveModel(e,t,n,i){let o=`${TLM_PROJECT_INFO.namespace_path}/${i}.json`,a=`${TLM_PROJECT_INFO.models_path}/${TLM_PROJECT_INFO.model_id}.json`;if(Project.geometry_name="model",Project.name=TLM_PROJECT_INFO.model_id,ModelMeta.name=TLM_PROJECT_INFO.models_path,ModelMeta.export_path=a,addModelToList(e),!isEmpty(t)){let e=pathToName(t).toLowerCase().replace(/\s|-/g,"_");fs.writeFileSync(`${TLM_PROJECT_INFO.animation_path}/${e}.js`,fs.readFileSync(t))}fs.writeFileSync(o,autoStringify(TLM_PROJECT_INFO.pack_data)),fs.writeFile(a,Format.codec.compile(),(function(e){}));for(let e of Object.keys(n))addLanguageEntry(e,n[e]);if(saveLanguageFile(),textures.length>0){let e,t=textures[0];e="link"===t.mode?nativeImage.createFromPath(t.source.replace(/\?\d+$/,"")).toPNG():nativeImage.createFromDataURL(t.source).toPNG();let n=`${TLM_PROJECT_INFO.textures_path}/${TLM_PROJECT_INFO.model_id}.png`;fs.writeFile(n,e,(function(e){})),t.name=TLM_PROJECT_INFO.model_id+".png",t.folder=TLM_PROJECT_INFO.textures_path,t.path=n,t.saved=!0}else Blockbench.notification("你当前没有创建材质！","游戏内的该模型将没有材质！");Blockbench.notification("模型导出成功！","")}var saveNewChairModelDialog=new Dialog({id:"save_new_chair_model_dialog",title:"请输入模型相关参数",form:{modelId:{label:"模型 ID（必填）",type:"input",placeholder:"仅支持小写英文字符和 . 和 _"},modelName:{label:"模型名称（必填）",type:"input",placeholder:"建议使用英文描述"},line1:"_",modelDesc:{label:"模型描述（可选）",type:"input",placeholder:"留空表示不填写任何描述"},renderItemScale:{label:"渲染成物品时的大小",type:"number",value:1,min:.1,max:2,step:.05},mountedHeight:{label:"坐上去的高度",type:"number",value:6,min:0,max:40,step:1},tameableCanRide:{label:"女仆能否能主动坐上去",type:"checkbox",value:!0},noGravity:{label:"坐垫可以浮空",type:"checkbox",value:!1},animation:{label:"动画脚本（可选）",type:"file",extensions:["blockbench"],filetype:"JS"}},onConfirm:function(e){let t=TLM_PROJECT_INFO.namespace,n={},i={},o=e.modelId.toLowerCase().replace(/\s|-/g,"_");if(/^[\w.]+$/.test(o))if(TLM_PROJECT_INFO.model_id=o,n.model_id=`${t}:${o}`,isEmpty(e.modelName))Blockbench.notification("模型名称不能为空","请输入一个可辨识的英文模型名称！");else{if(i[`model.${t}.${o}.name`]=e.modelName,saveNewChairModelDialog.form.modelName.value=e.modelName,isEmpty(e.modelDesc)||(n.description=[`{model.${t}.${o}.desc}`],i[`model.${t}.${o}.desc`]=e.modelDesc,saveNewChairModelDialog.form.modelDesc.value=e.modelDesc),1!==e.renderItemScale&&(n.render_item_scale=e.renderItemScale,saveNewChairModelDialog.form.renderItemScale.value=e.renderItemScale),n.mounted_height=e.mountedHeight,saveNewChairModelDialog.form.mountedHeight.value=e.mountedHeight,e.tameableCanRide||(n.tameable_can_ride=!1,saveNewChairModelDialog.form.tameableCanRide.value=!1),e.noGravity&&(n.no_gravity=!0,saveNewChairModelDialog.form.noGravity.value=!0),!isEmpty(e.animation)){let i=e.animation,o=pathToName(i).toLowerCase().replace(/\s|-/g,"_");n.animation=[`${t}:animation/${o}.js`]}checkDuplicateModelId()?Blockbench.showMessageBox({title:"检查到当前 ID 和已有模型 ID 重复",message:"是否继续进行保存？<br>这会覆盖掉同名模型的相关数据！",confirm:0,cancel:1,buttons:["确认覆盖","取消"]},(function(t){0===t&&(saveModel(n,e.animation,i,"maid_chair"),saveNewChairModelDialog.hide())})):(saveModel(n,e.animation,i,"maid_chair"),saveNewChairModelDialog.hide())}else Blockbench.notification("模型 ID 不合法！","模型 ID 仅支持英文字母，下划线和英文点号！")}}),createMaidPackDialog=new Dialog({id:"create_maid_pack",title:"创建一个新的女仆模型包",form:{packName:{label:"女仆模型包名称（必填）",type:"input",placeholder:"建议使用英文描述"},line1:"_",author:{label:"作者（可选）",type:"input",placeholder:"用逗号分隔多个作者"},packDescription:{label:"女仆模型包描述（可选）",type:"input",placeholder:"留空表示不填写任何描述"},packDate:{label:"创建日期（可选）",type:"input",placeholder:"格式推荐 2020-3-28"},packIcon:{label:"游戏内标签图标（可选）",type:"file",extensions:["png"],filetype:"PNG"}},onConfirm:function(e){let t,n=TLM_PROJECT_INFO.namespace,i=TLM_PROJECT_INFO.namespace_path,o=(TLM_PROJECT_INFO.lang_path,TLM_PROJECT_INFO.version),a=TLM_PROJECT_INFO.pack_data,l=e.packName.trim();if(isEmpty(l))return void Blockbench.notification("资源包名称不能为空","请输入一个可辨识的英文资源包名称！");if(a.pack_name=`{maid_pack.${n}.name}`,addLanguageEntry(`maid_pack.${n}.name`,l),saveLanguageFile(),!isEmpty(e.author)){let t=e.author.split(/[,|，]/);for(let e=0;e<t.length;e++)t[e]=t[e].trim();a.author=t}if(isEmpty(e.packDescription)||(a.description=[`{maid_pack.${n}.desc}`],addLanguageEntry(`maid_pack.${n}.desc`,e.packDescription),saveLanguageFile()),t=isEmpty(e.packDate)?dateFormat(new Date):e.packDate,a.date=t,!isEmpty(e.packIcon)){a.icon=n+":textures/maid_icon.png";let t=i+"/textures/maid_icon.png";fs.writeFileSync(t,fs.readFileSync(e.packIcon))}a.version=o,a.model_list=[];let r=i+"/maid_model.json";fs.writeFileSync(r,autoStringify(a)),Blockbench.notification("已创建女仆模型包！","位于命名空间："+n),createMaidPackDialog.hide(),saveNewMaidModelDialog.show()}}),createChairPackDialog=new Dialog({id:"create_chair_pack",title:"创建一个新的坐垫模型包",form:{packName:{label:"坐垫模型包名称（必填）",type:"input",placeholder:"建议使用英文描述"},line1:"_",author:{label:"作者（可选）",type:"input",placeholder:"用逗号分隔多个作者"},packDescription:{label:"坐垫模型包描述（可选）",type:"input",placeholder:"留空表示不填写任何描述"},packDate:{label:"创建日期（可选）",type:"input",placeholder:"格式推荐 2020-3-28"},packIcon:{label:"游戏内标签图标（可选）",type:"file",extensions:["png"],filetype:"PNG"}},onConfirm:function(e){let t,n=TLM_PROJECT_INFO.namespace,i=TLM_PROJECT_INFO.namespace_path,o=(TLM_PROJECT_INFO.lang_path,TLM_PROJECT_INFO.version),a=TLM_PROJECT_INFO.pack_data,l=e.packName.trim();if(isEmpty(l))return void Blockbench.notification("资源包名称不能为空","请输入一个可辨识的英文资源包名称！");if(a.pack_name=`{chair_pack.${n}.name}`,addLanguageEntry(`chair_pack.${n}.name`,l),saveLanguageFile(),!isEmpty(e.author)){let t=e.author.split(/[,|，]/);for(let e=0;e<t.length;e++)t[e]=t[e].trim();a.author=t}if(isEmpty(e.packDescription)||(a.description=[`{chair_pack.${n}.desc}`],addLanguageEntry(`chair_pack.${n}.desc`,e.packDescription),saveLanguageFile()),t=isEmpty(e.packDate)?dateFormat(new Date):e.packDate,a.date=t,!isEmpty(e.packIcon)){a.icon=n+":textures/chair_icon.png";let t=i+"/textures/chair_icon.png";fs.writeFileSync(t,fs.readFileSync(e.packIcon))}a.version=o,a.model_list=[];let r=i+"/maid_chair.json";fs.writeFileSync(r,autoStringify(a)),Blockbench.notification("已创建坐垫模型包！","位于命名空间："+n),createChairPackDialog.hide(),saveNewChairModelDialog.show()}}),exportPack=new Action("export_pack",{name:"导出模型",description:"将当前模型导出到资源包中",icon:"archive",click:function(){Format?"bedrock_old"!==Format.id?Blockbench.showMessageBox({title:"当前模型格式不正确！",message:'模型格式只支持 <font color="red">旧版基岩版</font> 模型！<br>你可以通过 <font color="orange">文件/转换工程</font> 菜单进行格式转换！',icon:"warning"},(function(e){})):0===Outliner.root.length?Blockbench.showMessageBox({title:"当前模型为空！",message:"请先创建模型，然后再进行导出！",icon:"warning"},(function(e){})):(0===textures.length&&Blockbench.notification("你当前没有创建材质！","你仍旧可以导出模型，但游戏内的该模型将没有材质！"),setTimeout(()=>{ElecDialogs.showOpenDialog(currentwindow,{title:"选择资源包文件夹",properties:["openDirectory"]},(function(e){null!=e&&checkIsPackFolder(e)}))},25)):Blockbench.showMessageBox({title:"当前没有模型",message:"请先创建模型，然后再进行模型导出！",icon:"warning"},(function(e){}))}});function checkIsPackFolder(e){let t,n,i=e+"/pack.mcmeta";if(!fs.existsSync(i))return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，缺少 pack.mcmeta 文件！",icon:"warning"},(function(e){}));if(!fs.statSync(i).isFile())return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，pack.mcmeta 应该是文件！",icon:"warning"},(function(e){}));let o=e+"/assets";if(!fs.existsSync(o))return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，缺少 assets 文件！",icon:"warning"},(function(e){}));if(!fs.statSync(o).isDirectory())return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，assets 应该是文件夹！",icon:"warning"},(function(e){}));let a=[],l=fs.readdirSync(o);for(let e of l){fs.statSync(`${o}/${e}`).isDirectory()&&a.push(e)}if(0!==a.length)if(a.length>1){let e={};for(let t of a)e[t]=t;let i=new Dialog({title:"发现多个命名空间文件夹，请选择一个！",form:{folder:{type:"select",label:"命名空间",default:a[0],options:e}},onConfirm:function(e){i.hide(),t=e.folder,n=`${o}/${e.folder}`,mkdirs(n+"/models/entity"),mkdirs(n+"/textures/entity"),mkdirs(n+"/lang"),mkdirs(n+"/animation"),TLM_PROJECT_INFO.namespace=t,TLM_PROJECT_INFO.namespace_path=n,TLM_PROJECT_INFO.animation_path=n+"/animation",TLM_PROJECT_INFO.lang_path=n+"/lang",TLM_PROJECT_INFO.models_path=n+"/models/entity",TLM_PROJECT_INFO.textures_path=n+"/textures/entity",reloadAndReadLanguage(),exportTypeDialog.show()}});i.show()}else 1===a.length&&(t=a[0],n=`${o}/${a[0]}`,mkdirs(n+"/models/entity"),mkdirs(n+"/textures/entity"),mkdirs(n+"/lang"),mkdirs(n+"/animation"),TLM_PROJECT_INFO.namespace=t,TLM_PROJECT_INFO.namespace_path=n,TLM_PROJECT_INFO.animation_path=n+"/animation",TLM_PROJECT_INFO.lang_path=n+"/lang",TLM_PROJECT_INFO.models_path=n+"/models/entity",TLM_PROJECT_INFO.textures_path=n+"/textures/entity",reloadAndReadLanguage(),exportTypeDialog.show());else Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，缺少命名空间文件夹！",icon:"warning"},(function(e){}))}var exportTypeDialog=new Dialog({id:"export_type_dialog",title:"选择导出类型",form:{bindType:{type:"select",label:"导出类型",default:"maid",options:{maid:"女仆模型",chair:"坐垫模型"}}},onConfirm:function(e){if("chair"===e.bindType){TLM_PROJECT_INFO.type="chair";let e=TLM_PROJECT_INFO.namespace_path+"/maid_chair.json";if(fs.existsSync(e)&&fs.statSync(e).isFile()){let t=fs.readFileSync(e,"utf8").replace(/^\uFEFF/,"");TLM_PROJECT_INFO.pack_data=JSON.parse(t);let n=TLM_PROJECT_INFO.pack_data.version;isEmpty(n)?(TLM_PROJECT_INFO.pack_data.version="1.0.0",TLM_PROJECT_INFO.version="1.0.0"):TLM_PROJECT_INFO.version=n,exportTypeDialog.hide(),saveNewChairModelDialog.show()}else TLM_PROJECT_INFO.version="1.0.0",TLM_PROJECT_INFO.pack_data={},Blockbench.notification("该资源包没有坐垫模型包","请填写对话框，完善坐垫模型包相关数据"),createChairPackDialog.show()}if("maid"===e.bindType){TLM_PROJECT_INFO.type="maid";let e=TLM_PROJECT_INFO.namespace_path+"/maid_model.json";if(fs.existsSync(e)&&fs.statSync(e).isFile()){let t=fs.readFileSync(e,"utf8").replace(/^\uFEFF/,"");TLM_PROJECT_INFO.pack_data=JSON.parse(t);let n=TLM_PROJECT_INFO.pack_data.version;isEmpty(n)?(TLM_PROJECT_INFO.pack_data.version="1.0.0",TLM_PROJECT_INFO.version="1.0.0"):TLM_PROJECT_INFO.version=n,exportTypeDialog.hide(),saveNewMaidModelDialog.show()}else TLM_PROJECT_INFO.version="1.0.0",TLM_PROJECT_INFO.pack_data={},Blockbench.notification("该资源包没有女仆模型包","请填写对话框，完善女仆模型包相关数据"),createMaidPackDialog.show()}}});function registerTextureEvent(){Blockbench.on("add_texture",changeTextureName),Blockbench.on("new_project",removeAllInfo)}function removeTextureEvent(){Blockbench.removeListener("add_texture",changeTextureName),Blockbench.removeListener("new_project",removeAllInfo)}function changeTextureName(e){let t=TLM_PROJECT_INFO.model_id,n=TLM_PROJECT_INFO.textures_path,i=TLM_PROJECT_INFO.texture_name;if(!isEmpty(t)&&!isEmpty(n)&&!isEmpty(i)){let t=e.texture;t.name=i,t.folder=n,t.path=`${n}/${i}`,Blockbench.notification("自动材质定位：","检测到你已经绑定了资源包，并设置了模型数据。自动定位创建的材质！")}}function removeAllInfo(){clearAll()}var loadPack=new Action("load_pack",{name:"导入模型",description:"从已有资源包中导入模型",icon:"unarchive",cachePath:"",click:function(){newProject(Formats.bedrock_old,!1)&&ElecDialogs.showOpenDialog(currentwindow,{title:"选择导入的资源包文件夹",properties:["openDirectory"]},(function(e){null!=e&&e.length>0&&checkIsPackFolder$1(e)}))}});function checkIsPackFolder$1(e){let t,n,i=e+"/pack.mcmeta";if(!fs.existsSync(i))return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，缺少 pack.mcmeta 文件！",icon:"warning"},(function(e){}));if(!fs.statSync(i).isFile())return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，pack.mcmeta 应该是文件！",icon:"warning"},(function(e){}));let o=e+"/assets";if(!fs.existsSync(o))return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，缺少 assets 文件！",icon:"warning"},(function(e){}));if(!fs.statSync(o).isDirectory())return void Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，assets 应该是文件夹！",icon:"warning"},(function(e){}));let a=[],l=fs.readdirSync(o);for(let e of l){fs.statSync(`${o}/${e}`).isDirectory()&&a.push(e)}if(0!==a.length)if(a.length>1){let e={};for(let t of a)e[t]=t;let i=new Dialog({title:"发现多个命名空间文件夹，请选择一个！",form:{folder:{type:"select",label:"命名空间",default:a[0],options:e}},onConfirm:function(e){i.hide(),t=e.folder,n=`${o}/${e.folder}`,mkdirs(n+"/models/entity"),mkdirs(n+"/textures/entity"),mkdirs(n+"/lang"),mkdirs(n+"/animation"),TLM_PROJECT_INFO.namespace=t,TLM_PROJECT_INFO.namespace_path=n,TLM_PROJECT_INFO.animation_path=n+"/animation",TLM_PROJECT_INFO.lang_path=n+"/lang",TLM_PROJECT_INFO.models_path=n+"/models/entity",TLM_PROJECT_INFO.textures_path=n+"/textures/entity",reloadAndReadLanguage(),chooseMaidOrChair(n)}});i.show()}else 1===a.length&&(t=a[0],n=`${o}/${a[0]}`,mkdirs(n+"/models/entity"),mkdirs(n+"/textures/entity"),mkdirs(n+"/lang"),mkdirs(n+"/animation"),TLM_PROJECT_INFO.namespace=t,TLM_PROJECT_INFO.namespace_path=n,TLM_PROJECT_INFO.animation_path=n+"/animation",TLM_PROJECT_INFO.lang_path=n+"/lang",TLM_PROJECT_INFO.models_path=n+"/models/entity",TLM_PROJECT_INFO.textures_path=n+"/textures/entity",reloadAndReadLanguage(),chooseMaidOrChair(n));else Blockbench.showMessageBox({title:"提示：",message:"选择的文件夹不是资源包，缺少命名空间文件夹！",icon:"warning"},(function(e){}))}function chooseMaidOrChair(e){let t=e+"/maid_model.json",n=e+"/maid_chair.json";if(fs.existsSync(t)||fs.existsSync(n)){if(!fs.existsSync(t)||!fs.existsSync(n))return fs.existsSync(t)?(TLM_PROJECT_INFO.type="maid",void readPackInfo(t)):void(fs.existsSync(n)&&(TLM_PROJECT_INFO.type="chair",readPackInfo(n)));bindTypeDialog.show()}else Blockbench.showMessageBox({title:"提示：",message:"该资源包不包含模型描述文件，请确认选择了正确的资源包！",icon:"warning"},(function(e){}))}var bindTypeDialog=new Dialog({id:"bind_type_dialog",title:"选择绑定类型",form:{bindType:{type:"select",label:"绑定类型",default:"maid",options:{maid:"女仆模型",chair:"坐垫模型"}}},onConfirm:function(e){"chair"===e.bindType&&(TLM_PROJECT_INFO.type="chair",readPackInfo(TLM_PROJECT_INFO.namespace_path+"/maid_chair.json")),"maid"===e.bindType&&(TLM_PROJECT_INFO.type="maid",readPackInfo(TLM_PROJECT_INFO.namespace_path+"/maid_model.json"))}});function readPackInfo(e){let t=fs.readFileSync(e,"utf8").replace(/^\uFEFF/,"");TLM_PROJECT_INFO.pack_data=JSON.parse(t);let n=TLM_PROJECT_INFO.pack_data.version;isEmpty(n)?(TLM_PROJECT_INFO.pack_data.version="1.0.0",TLM_PROJECT_INFO.version="1.0.0"):TLM_PROJECT_INFO.version=n;let i=TLM_PROJECT_INFO.pack_data.model_list;if(null==i||i.length<1)return void Blockbench.showMessageBox({title:"提示：",message:"检测到该包不包含模型，请确认你选择了正确的资源包！",icon:"warning"},(function(e){}));let o={},a=getChineseLanguage();i.forEach((function(e){let t=e.model_id.split(":",2)[1],n=e.name;if(isEmpty(n)){let n=`model.${e.model_id.replace(":",".")}.name`;isEmpty(a[n])?o[t]=t:o[t]=a[n]}else if(0===n.indexOf("{")&&n.indexOf("}")===n.length-1){let e=n.replace(/^{/,"").replace(/}$/,"");isEmpty(a[e])?o[t]=t:o[t]=a[e]}else o[t]=n}));let l=new Dialog({id:"select_model_dialog",title:"请选择模型",form:{modelId:{type:"select",label:"选择模型",options:o}},onConfirm:function(e){l.hide(),TLM_PROJECT_INFO.model_id=e.modelId;let t,n=`${TLM_PROJECT_INFO.namespace}:${e.modelId}`;if(i.forEach((function(e){e.model_id===n&&(t=e)})),null==t)return void console.exception("严重错误！选取的模型不在模型列表中！");let o=`${TLM_PROJECT_INFO.models_path}/${e.modelId}.json`,a=`${TLM_PROJECT_INFO.textures_path}/${e.modelId}.png`;if(!isEmpty(t.model)){let e=t.model.split(":",2)[0],n=t.model.split(":",2)[1];if(e!==TLM_PROJECT_INFO.namespace)return void Blockbench.showMessageBox({title:"异常：",message:"检测到选择的模型含了其他外部文件，无法进行加载！",icon:"warning"},(function(e){}));o=`${TLM_PROJECT_INFO.namespace_path}/${n}`}if(!isEmpty(t.texture)){let e=t.texture.split(":",2)[0],n=t.texture.split(":",2)[1];if(e!==TLM_PROJECT_INFO.namespace)return void Blockbench.showMessageBox({title:"异常：",message:"检测到选择的模型材质包含了其他外部文件，无法进行加载！",icon:"warning"},(function(e){}));a=`${TLM_PROJECT_INFO.namespace_path}/${n}`}Blockbench.read([o],{errorbox:!0},(function(e){loadModelFile(e[0]),Project.geometry_name="model",Project.name=TLM_PROJECT_INFO.model_id,ModelMeta.name=path.dirname(o),ModelMeta.export_path=o,Blockbench.read([a],{readtype:"image",errorbox:!0},(function(e){e.forEach((function(e){TLM_PROJECT_INFO.textures_path=path.dirname(e.path),TLM_PROJECT_INFO.texture_name=e.name,new Texture({name:e.name,folder:path.dirname(e.path),path:e.path}).fromFile(e).add(!1)}))}))}))}});l.show()}function getChineseLanguage(){let e=TLM_PROJECT_INFO.lang_path+"/en_us.lang",t=TLM_PROJECT_INFO.lang_path+"/zh_cn.lang",n={};if(fs.existsSync(e)&&fs.statSync(e).isFile()){fs.readFileSync(e,"utf8").split(/\r?\n/).forEach((function(e){if(0!==e.indexOf("#")){let t=e.split("=",2);isEmpty(t[0])||isEmpty(t[1])||(n[t[0]]=t[1])}}))}if(fs.existsSync(t)&&fs.statSync(t).isFile()){fs.readFileSync(t,"utf8").split(/\r?\n/).forEach((function(e){if(0!==e.indexOf("#")){let t=e.split("=",2);isEmpty(t[0])||isEmpty(t[1])||(n[t[0]]=t[1])}}))}return n}var format_version="1.10.0",defaultMaidModel={format_version:format_version,"geometry.model":{texturewidth:128,textureheight:128,visible_bounds_width:3,visible_bounds_height:2,visible_bounds_offset:[0,1,0],bones:[{name:"head",pivot:[0,18,0],cubes:[{origin:[-4,18,-4],size:[8,8,8],uv:[0,0]}]},{name:"ahoge",parent:"head",pivot:[0,26,0],cubes:[{origin:[-3,26,0],size:[6,6,0],uv:[0,0]}]},{name:"blink",parent:"head",pivot:[0,18,0],cubes:[{origin:[-4,18,-4.001],size:[8,8,0],uv:[44,28]}]},{name:"armRight",pivot:[-3,17.5,0],rotation:[0,0,25],cubes:[{origin:[-5,8.5,-1],size:[2,8,2],uv:[32,40]},{origin:[-5.5,13.5,-1.5],size:[3,4,3],uv:[12,46]}]},{name:"armLeft",pivot:[3,17.5,0],rotation:[0,0,-25],cubes:[{origin:[2.5,13.5,-1.5],size:[3,4,3],uv:[12,40]},{origin:[3,8.5,-1],size:[2,8,2],uv:[24,40]}]},{name:"body",pivot:[0,10.5,0],cubes:[{origin:[-3,11.999,-3],size:[6,6,6],uv:[56,16]},{origin:[-3.5,10,-3.5],size:[7,2,7],uv:[28,16]},{origin:[-4,8,-4],size:[8,2,8],uv:[68,0]},{origin:[-4.5,6,-4.5],size:[9,2,9],uv:[32,0]},{origin:[-4,7.999,-2],size:[8,2,4],uv:[20,28]}]},{name:"legLeft",pivot:[2,9,0],cubes:[{origin:[.499,0,-1.5],size:[3,9,3],uv:[0,40]}]},{name:"legRight",pivot:[-2,9,0],cubes:[{origin:[-3.499,0,-1.5],size:[3,9,3],uv:[60,28]}]},{name:"wingLeft",pivot:[.5,15,3.25],rotation:[0,60,0],cubes:[{origin:[.5,3,3.5],size:[0,24,13],uv:[0,0]}]},{name:"wingRight",pivot:[-.5,15,3.75],rotation:[0,-60,0],cubes:[{origin:[-.5,3,3.5],size:[0,24,13],uv:[0,0]}]},{name:"tail",pivot:[0,8,4],rotation:[20,0,0],cubes:[{origin:[-1,7,4],size:[2,2,3],uv:[0,0]}]}]}},createDefaultMaidModel=new Action("create_default_maid_model",{name:"新建工作区",description:"创建一个默认标准格式的女仆模型",icon:"fa-file-alt",click:function(){if(newProject(Formats.bedrock_old,!1)){let e=JSON.parse(JSON.stringify(defaultMaidModel)),t=new Dialog({title:"请选择你想要导入的模型部件",form:{head:{label:"头部",type:"checkbox",value:!0},blink:{label:"眨眼表情",type:"checkbox",value:!0},body:{label:"身体",type:"checkbox",value:!0},armLeft:{label:"左臂",type:"checkbox",value:!0},armRight:{label:"右臂",type:"checkbox",value:!0},legLeft:{label:"左腿",type:"checkbox",value:!0},legRight:{label:"右腿",type:"checkbox",value:!0},wingLeft:{label:"左侧翅膀",type:"checkbox",value:!1},wingRight:{label:"右侧翅膀",type:"checkbox",value:!1},tail:{label:"尾巴",type:"checkbox",value:!1},ahoge:{label:"呆毛",type:"checkbox",value:!1}},onConfirm:function(n){let i=e["geometry.model"].bones;for(let e in n)for(let t=0;t<i.length;t++)if(i[t].name===e&&!n[e]){i.splice(t,1);break}t.hide(),Codecs.bedrock_old.parse(e,null)}});t.show()}}}),addBoneMenu={is_tlm_add_menu:!0,icon:"fa-chart-pie",name:"生成动画骨骼",description:"生成一些拥有默认动画的骨骼",condition:{modes:["edit"]},children:function(){let e=[{icon:"fa-home",name:"基础部分",description:"头、手、腿等基础动画部件",children:[]},{icon:"fa-expand-arrows-alt",name:"额外部件",description:"翅膀、呆毛，尾巴等额外动画部件",children:[]},{icon:"fa-tshirt",name:"护甲",description:"各个护甲部件",children:[]},{icon:"fa-minus-circle",name:"隐藏护甲",description:"各个隐藏式护甲部件",children:[]},{icon:"fa-crosshairs",name:"定位骨骼",description:"各个定位骨骼部件",children:[]}];for(let t of boneNameList)switch(t.group){case"base":e[0].children.push(getMenu(t));break;case"extra":e[1].children.push(getMenu(t));break;case"armor":e[2].children.push(getMenu(t));break;case"hide_armor":e[3].children.push(getMenu(t));break;case"position":e[4].children.push(getMenu(t))}return e}};function getMenu(e){return{icon:"fa-chevron-circle-right",name:e.name,condition:{modes:["edit"],method:()=>"bedrock_old"===Format.id},description:e.description,color:e.color,click:function(t){let n,i=Group.all.slice();if(Array.isArray(e.bone)){let t=e.bone.slice();for(let e of i)t.includes(e.name)&&t.splice(t.indexOf(e.name),1);if(t.length<1)return void Blockbench.notification("重名骨骼","发现当前名称骨骼已经存在，创建失败");n=t[0]}else{for(let t of i)if(t.name===e.bone)return void Blockbench.notification("重名骨骼","发现当前名称骨骼已经存在，创建失败");n=e.bone}if(e.parents)if(e.parents.length<1){if(t)return void Blockbench.notification("骨骼位置不对","当前骨骼必须最顶层骨骼！")}else if(!t||!e.parents.includes(t.name))return void Blockbench.notification("骨骼位置不对",`当前骨骼必须位于 ${e.parents} 骨骼之下！`);Undo.initEdit({outliner:!0,elements:[],selection:!0});let o=elements.length,a=new Group({name:n,origin:t?t.origin:void 0});a.addTo(t),a.isOpen=!0,a.init().select(),Undo.finishEdit("add_bone",{outliner:!0,elements:elements.slice().slice(o),selection:!0})}}}var boneNameList=[{bone:"head",name:"头部",description:"头部旋转，祈求动作",color:"#718c00",parents:[],group:"base"},{bone:"armLeft",name:"左臂",description:"行走时手臂动画效果，手臂末端持有物品的显示，待命时手臂合拢效果",color:"#718c00",parents:[],group:"base"},{bone:"armRight",name:"右臂",description:"行走时手臂动画效果，手臂末端持有物品的显示，待命时手臂合拢效果",color:"#718c00",parents:[],group:"base"},{bone:"legLeft",name:"左腿",description:"行走时腿部动画效果，待命骑行时腿部坐下效果",color:"#718c00",parents:[],group:"base"},{bone:"legRight",name:"右腿",description:"行走时腿部动画效果，待命骑行时腿部坐下效果",color:"#718c00",parents:[],group:"base"},{bone:"wingLeft",name:"左翅膀",description:"翅膀往复摆动画",color:"#fe9750",group:"extra"},{bone:"wingRight",name:"右翅膀",description:"翅膀往复摆动画",color:"#fe9750",group:"extra"},{bone:"ahoge",name:"呆毛",description:"祈求状态下的呆毛圆锥摆动画",color:"#fe9750",parents:["head"],group:"extra"},{bone:"blink",name:"眨眼",description:"日常的眨眼动画",color:"#fe9750",parents:["head"],group:"base"},{bone:"tail",name:"尾巴",description:"以旋转点为中心，Z 方向的小幅度圆锥摆",color:"#fe9750",group:"extra"},{bone:["sinFloat","cosFloat","_sinFloat","_cosFloat"],name:"漂浮部件",description:"以旋转点为中心的上下小距离浮动",color:"#fe9750",group:"extra"},{bone:"helmet",name:"头盔",description:"穿戴头盔后显示该模型",color:"#66cccc",group:"armor"},{bone:["chestPlate","chestPlateLeft","chestPlateMiddle","chestPlateRight"],name:"胸甲",description:"穿戴胸甲后显示该模型",color:"#66cccc",group:"armor"},{bone:["leggings","leggingsLeft","leggingsMiddle","leggingsRight"],name:"护腿",description:"穿戴护腿后显示该模型",color:"#66cccc",group:"armor"},{bone:["bootsLeft","bootsRight"],name:"靴子",description:"穿戴靴子后显示该模型",color:"#66cccc",group:"armor"},{bone:"_helmet",name:"反向头盔",description:"穿戴头盔后隐藏该模型",color:"#6699cc",group:"hide_armor"},{bone:["_chestPlate","_chestPlateLeft","_chestPlateMiddle","_chestPlateRight"],name:"反向胸甲",description:"穿戴胸甲后隐藏该模型",color:"#6699cc",group:"hide_armor"},{bone:["_leggings","_leggingsLeft","_leggingsMiddle","_leggingsRight"],name:"反向护腿",description:"穿戴护腿后隐藏该模型",color:"#6699cc",group:"hide_armor"},{bone:["_bootsLeft","_bootsRight"],name:"反向靴子",description:"穿戴靴子后隐藏该模型",color:"#6699cc",group:"hide_armor"},{bone:"armLeftPositioningBone",name:"左手臂定位骨骼",description:"女仆手持物品的定位骨骼，为空骨骼。空骨骼的旋转点决定了手持物品的起始位置",color:"#cc99cc",parents:["armLeft"],group:"position"},{bone:"armRightPositioningBone",name:"右手臂定位骨骼",description:"女仆手持物品的定位骨骼，为空骨骼。它的旋转点决定了手持物品的起始位置",color:"#cc99cc",parents:["armRight"],group:"position"},{bone:"backpackPositioningBone",name:"背包定位骨骼",description:"女仆背包的定位骨骼，为空骨骼。它的旋转点决定了背包肩带的中心点",color:"#cc99cc",parents:[],group:"position"}],name="tlm-utils",version="1.0.3",author="tartaric_acid",description="Touhou Little Maid Mod Blockbench Plugin",repository={type:"git",url:"https://github.com/TartaricAcid/TLM-Utils-Plugins"},license="MIT",engines={node:"12.13.0",electron:"8.0.2",blockbench:"3.4.2"},bugs={url:"https://github.com/TartaricAcid/TLM-Utils-Plugins/issues",email:"baka943@qq.com"},dependencies={sha1:"^1.1.1"},scripts={start:"rollup -c"},devDependencies={rollup:"2.3.3","@rollup/plugin-json":"latest","@rollup/plugin-commonjs":"^12.0.0","@rollup/plugin-node-resolve":"^8.0.0"},tlmUtilsPackageJsonInfo={name:name,version:version,author:author,description:description,repository:repository,license:license,engines:engines,bugs:bugs,dependencies:dependencies,scripts:scripts,devDependencies:devDependencies},openWikiUrl=new Action("open_wiki_url",{name:"打开 wiki 页面",description:"打开车万女仆模组的 wiki 界面",icon:"fa-book",click:function(){Blockbench.openLink("https://tlmwiki.cfpa.team/")}}),openMcbbsUrl=new Action("open_mcbbs_url",{name:"打开模型发布页面",description:"打开 MCBBS 的模型发布界面",icon:"fa-swatchbook",click:function(){Blockbench.openLink("https://www.mcbbs.net/thread-1015497-1-1.html")}}),addSkirtMenu={is_tlm_add_menu:!0,icon:"fa-female",name:"生成裙子",condition:{modes:["edit"],method:()=>"bedrock_old"===Format.id},children:[{icon:"fa-female",name:"下垂的长裙",click:function(e){genSkirt({count:14,width:2,height:12,length:2,deg:23},e)}},{icon:"fa-female",name:"适中的裙子",click:function(e){genSkirt({count:12,width:2,height:8,length:2,deg:23},e)}},{icon:"fa-female",name:"撑开的圆裙",click:function(e){genSkirt({count:16,width:2,height:8,length:2,deg:45},e)}},{icon:"fa-female",name:"短裙",click:function(e){genSkirt({count:12,width:2,height:6,length:2,deg:45},e)}},{icon:"fa-cogs",name:"自定义裙子",click:function(e){addSkirt(e)}}]};function addSkirt(e){new Dialog({title:"输入裙子参数",form:{count:{type:"number",label:"裙褶个数",value:12,min:4,max:50,step:1},width:{type:"number",label:"裙褶长度",value:2,min:0,max:10,step:1},length:{type:"number",label:"裙褶宽度",value:2,min:0,max:10,step:1},height:{type:"number",label:"裙褶高度",value:6,min:1,max:100,step:1},deg:{type:"number",label:"裙褶倾角",value:23,min:0,max:180,step:1}},onConfirm:function(t){genSkirt(t,e),this.hide()}}).show()}function genSkirt(e,t){let n=e.count,i=e.width,o=e.height,a=e.length,l=e.deg;Undo.initEdit({outliner:!0,elements:[],selection:!0});let r=elements.length;t||(t=new Group({}),Format.bone_rig&&t.createUniqueName(),t.init());let c=t;if(c||!c.length){for(let e=0;e<n;e++){let r=Math.sqrt(a**2+i**2)/2/Math.tan(Math.PI/n);c=addSkirtGroup(c,[0,0,0],[0,360/n*e,0]),c=addSkirtGroup(c,[0,0,r],[-l,0,0]),c=addSkirtGroup(c,[0,0,r],[0,Math.radToDeg(Math.atan(a/i)),0]),addSkirtCube(c,[-i/2,0,r-a/2],[i,o,a]),c=t}Undo.finishEdit("add_skirt_bone",{outliner:!0,elements:elements.slice().slice(r),selection:!0}),t.select(),Canvas.updateSelected()}else Blockbench.notification("当前所选组不正确","请选择或创建一个空组")}function addSkirtCube(e,t,n){let i=new Cube({autouv:settings.autouv.value?1:0}).init();if(i.addTo(e),Format.bone_rig&&e){let o=e.origin.slice();i.extend({from:[t[0],t[1],t[2]],to:[t[0]+n[0],t[1]+n[1],t[2]+n[2]],origin:o.slice()})}}function addSkirtGroup(e,t,n){let i=new Group({origin:[t[0],t[1],t[2]],rotation:[n[0],n[1],n[2]]});return i.addTo(e),Format.bone_rig&&i.createUniqueName(),i.init(),i}var addRibbonMenu={is_tlm_add_menu:!0,icon:"fa-chart-line",name:"生成函数飘带",condition:{modes:["edit"],method:()=>"bedrock_old"===Format.id},children:[{icon:"fa-chart-line",name:"正弦飘带",children:[{icon:"fa-chart-line",name:"正弦飘带",click:function(e){addRibbon(e,"Math.sin(x)",0,2*Math.PI)}},{icon:"fa-chart-line",name:"大正弦飘带",click:function(e){addRibbon(e,"2*Math.sin(x/2)",0,4*Math.PI)}},{icon:"fa-chart-line",name:"窄正弦飘带",click:function(e){addRibbon(e,"2*Math.sin(x)",0,2*Math.PI)}},{icon:"fa-chart-line",name:"缓正弦飘带",click:function(e){addRibbon(e,"Math.sin(x/2)",0,4*Math.PI)}}]},{icon:"fa-chart-line",name:"余弦飘带",children:[{icon:"fa-chart-line",name:"余弦飘带",click:function(e){addRibbon(e,"Math.cos(x)",0,2*Math.PI)}},{icon:"fa-chart-line",name:"大余弦飘带",click:function(e){addRibbon(e,"2*Math.cos(x/2)",0,4*Math.PI)}},{icon:"fa-chart-line",name:"窄余弦飘带",click:function(e){addRibbon(e,"2*Math.cos(x)",0,2*Math.PI)}},{icon:"fa-chart-line",name:"缓余弦飘带",click:function(e){addRibbon(e,"Math.cos(x/2)",0,4*Math.PI)}}]},{icon:"fa-chart-line",name:"指数函数飘带",children:[{icon:"fa-chart-line",name:"平方",click:function(e){addRibbon(e,"x**2",-3,3)}},{icon:"fa-chart-line",name:"缓平方",click:function(e){addRibbon(e,"(x/2)**2",-6,6)}},{icon:"fa-chart-line",name:"开方",click:function(e){addRibbon(e,"x**(1/2)",0,9)}},{icon:"fa-chart-line",name:"缓开方",click:function(e){addRibbon(e,"2*x**(1/2)",0,9)}}]},{icon:"fa-cogs",name:"自定义飘带",click:customRibbonMenu}]};function customRibbonMenu(e){new Dialog({title:"输入函数飘带参数",lines:["函数表达式举例：<br>","sin 函数：<font color='#ff7f50'>Math.sin(x)</font> ","cos 函数：<font color='#ff7f50'>Math.cos(x)</font> ","tan 函数：<font color='#ff7f50'>Math.tan(x)</font><br> ","二次函数：<font color='#ff7f50'>x*x+2*x+1</font> ","指数函数：<font color='#ff7f50'>x**(1/2)</font> ","对数函数：<font color='#ff7f50'>Math.log(x)</font><br> "],form:{func:{type:"input",label:"函数表达式",placeholder:"使用 JS 函数表达式，自变量为 x"},start:{type:"number",label:"起始 x 值",value:0,min:-100,max:100},end:{type:"number",label:"终止 x 值",value:5,min:-100,max:100},width:{type:"number",label:"飘带宽度",value:5,min:1,max:50,step:1}},onConfirm:function(t){if(isEmpty(t.func))Blockbench.notification("函数为空","请输入一个函数表达式！");else if(Math.abs(t.start-t.end)<1)Blockbench.notification("参数过近","起始和终止坐标差值过小！");else{try{let e=customFunction(t.start,t.func),n=customFunction(t.end,t.func);if(Math.abs(e)>100||Math.abs(n)>100)return void Blockbench.notification("函数超限","起始或终止坐标距离过远！")}catch(e){return cl(e),void Blockbench.notification("表达式错误","函数表达式计算出错，请检查其书写正确性！")}try{let n=Math.min(t.start,t.end),i=Math.max(t.start,t.end);addRibbon(e,t.func,n,i,t.width)}catch(e){Blockbench.notification("生成错误","请检查函数表达式书写正确性！")}finally{this.hide()}}}}).show()}function customFunction(x,func){return eval(`let x = ${x}; ${func};`)}function round(e,t){return Math.sqrt(e**2+t**2)}function addRibbon(e,t,n,i,o){let a=[n,customFunction(n,t)];Undo.initEdit({outliner:!0,elements:[],selection:!0});let l=elements.length;e||(e=addRibbonGroup(void 0,[0,0,0],[0,0,0])),genNodeGroup(e,t,a,i,o),Undo.finishEdit("add_ribbon_bone",{outliner:!0,elements:elements.slice().slice(l),selection:!0}),e.select(),Canvas.updateSelected()}function genNodeGroup(e,t,n,i,o){let a=intersection(n[0],n[0]+1,n,t),l=Math.radToDeg(Math.atan((a[1]-n[1])/(a[0]-n[0])));addRibbonCube(addRibbonGroup(e,[n[0],n[1],0],[0,0,l]),[n[0],n[1],0],[1,0,o]),a[0]<=i&&genNodeGroup(e,t,a,i,o)}function intersection(e,t,n,i){let o=(e+t)/2,a=customFunction(o,i),l=round(o-n[0],a-n[1])-1;return l>5e-4?intersection(e,o,n,i):l<-5e-4?intersection(o,t,n,i):[o,a]}function addRibbonGroup(e,t,n){let i=new Group({origin:[t[0],t[1],t[2]],rotation:[n[0],n[1],n[2]]});return i.addTo(e),i.createUniqueName(),i.init(),i}function addRibbonCube(e,t,n){let i=new Cube({autouv:settings.autouv.value?1:0}).init();i.addTo(e),Format.bone_rig&&e&&i.extend({from:[t[0],t[1],t[2]],to:[t[0]+n[0],t[1]+n[1],t[2]+n[2]],origin:e.origin.slice()})}var addPolygonMenu={is_tlm_add_menu:!0,icon:"fa-draw-polygon",name:"生成多边形",condition:{modes:["edit"],method:()=>"bedrock_old"===Format.id},children:[{icon:"fa-draw-polygon",name:"正三边形",click:function(e){genPolygon({count:3,width:2,flip:0},e)}},{icon:"fa-draw-polygon",name:"正五边形",click:function(e){genPolygon({count:5,width:2,flip:0},e)}},{icon:"fa-draw-polygon",name:"正六边形",click:function(e){genPolygon({count:6,width:2,flip:0},e)}},{icon:"fa-draw-polygon",name:"正八边形",click:function(e){genPolygon({count:8,width:2,flip:0},e)}},{icon:"fa-draw-polygon",name:"十六边形",click:function(e){genPolygon({count:16,width:1,flip:0},e)}},{icon:"fa-cogs",name:"自定义正多边形",click:function(e){addPolygon(e)}}]};function addPolygon(e){new Dialog({title:"输入多边形参数",form:{count:{type:"number",label:"边数",value:6,min:3,max:50,step:1},width:{type:"number",label:"边长",value:2,min:1,max:16,step:1},flip:{type:"number",label:"翻转角度",value:0,min:-180,max:180,step:1}},onConfirm:function(t){genPolygon(t,e),this.hide()}}).show()}function genPolygon(e,t){let n=e.count,i=e.width;Undo.initEdit({outliner:!0,elements:[],selection:!0});let o=elements.length;t||(t=new Group({}),Format.bone_rig&&t.createUniqueName(),t.init());let a=t;if(a||!a.length){for(let o=0;o<n;o++){let l=i/2/Math.tan(Math.PI/n),r=360/n*o;a=addPolygonGroup(a,[0,0,0],[e.flip,r,0]),addPolygonCube(a,[-i/2,0,l],[i,1,0]),a=t}Undo.finishEdit("add_polygon_bone",{outliner:!0,elements:elements.slice().slice(o),selection:!0}),t.select(),Canvas.updateSelected()}else Blockbench.notification("当前所选组不正确","请选择或创建一个空组")}function addPolygonCube(e,t,n){let i=new Cube({autouv:settings.autouv.value?1:0}).init();if(i.addTo(e),Format.bone_rig&&e){let o=e.origin.slice();i.extend({from:[t[0],t[1],t[2]],to:[t[0]+n[0],t[1]+n[1],t[2]+n[2]],origin:o.slice()})}}function addPolygonGroup(e,t,n){let i=new Group({origin:[t[0],t[1],t[2]],rotation:[n[0],n[1],n[2]]});return i.addTo(e),Format.bone_rig&&i.createUniqueName(),i.init(),i}var addSkirt2Menu={is_tlm_add_menu:!0,icon:"fa-vector-square",name:"生成方裙",condition:{modes:["edit"],method:()=>"bedrock_old"===Format.id},children:[{icon:"fa-vector-square",name:"四方裙",click:function(e){genSkirt2({length:5,deg:10,number:4,side:2},e)}},{icon:"fa-vector-square",name:"六方裙",click:function(e){genSkirt2({length:2,deg:15,number:6,side:2},e)}},{icon:"fa-vector-square",name:"八方裙",click:function(e){genSkirt2({length:1,deg:18,number:8,side:2},e)}},{icon:"fa-cogs",name:"自定义方裙",click:function(e){addSkirt2(e)}}]};function addSkirt2(e){new Dialog({title:"输入方裙参数",form:{length:{type:"number",label:"方裙长度",value:6,min:2,max:64,step:1},deg:{type:"number",label:"方裙倾角",value:10,min:0,max:90,step:1},number:{type:"number",label:"方裙边数",value:6,min:3,max:64,step:1},side:{type:"number",label:"衔接边宽度",value:2,min:1,max:16,step:1}},onConfirm:function(t){genSkirt2(t,e),this.hide()}}).show()}function genSkirt2(e,t){let n=e.length,i=e.deg,o=e.number,a=e.side;Undo.initEdit({outliner:!0,elements:[],selection:!0});let l=elements.length;t||(t=new Group({}),Format.bone_rig&&t.createUniqueName(),t.init());let r=t;if(!r&&r.length)return void Blockbench.notification("当前所选组不正确","请选择或创建一个空组");let c=Math.atan(Math.sin(Math.degToRad(i)*Math.tan(Math.PI/o)));for(let e=0;e<o;e++){let l;r=addSkirtGroup$1(r,[0,0,0],[0,360/o*e,0]),r=addSkirtGroup$1(r,[0,0,a*Math.cos(c)+n/2],[-i,0,0]),addSkirtCube$1(r,[-n/2,-a*Math.sin(c),(a*Math.cos(c)+n/2)/Math.tan(Math.PI/o)],[n,6,0]),l=addSkirtGroup$1(r,[n/2,-a*Math.sin(c),a*Math.cos(c)+n/2],[0,0,Math.radToDeg(c)]),addSkirtCube$1(l,[n/2,-a*Math.sin(c),(a*Math.cos(c)+n/2)/Math.tan(Math.PI/o)-.001],[a,6,0]),l=addSkirtGroup$1(r,[-n/2,-a*Math.sin(c),a*Math.cos(c)+n/2],[0,0,-Math.radToDeg(c)]),addSkirtCube$1(l,[-n/2-a,-a*Math.sin(c),(a*Math.cos(c)+n/2)/Math.tan(Math.PI/o)+.001],[a,6,0]),r=t}Undo.finishEdit("add_skirt2_bone",{outliner:!0,elements:elements.slice().slice(l),selection:!0}),t.select(),Canvas.updateSelected()}function addSkirtCube$1(e,t,n){let i=new Cube({autouv:settings.autouv.value?1:0}).init();if(i.addTo(e),Format.bone_rig&&e){let o=e.origin.slice();i.extend({from:[t[0],t[1],t[2]],to:[t[0]+n[0],t[1]+n[1],t[2]+n[2]],origin:o.slice()})}}function addSkirtGroup$1(e,t,n){let i=new Group({origin:[t[0],t[1],t[2]],rotation:[n[0],n[1],n[2]]});return i.addTo(e),Format.bone_rig&&i.createUniqueName(),i.init(),i}var IS_TLM_ARMOR_HIDE=!1,armorTlmBone=["helmet","chestPlate","chestPlateLeft","chestPlateMiddle","chestPlateRight","leggings","leggingsLeft","leggingsMiddle","leggingsRight","bootsLeft","bootsRight"],hideArmorTlmBone=["-helmet","_helmet","-chestPlate","-chestPlateLeft","-chestPlateMiddle","-chestPlateRight","_chestPlate","_chestPlateLeft","_chestPlateMiddle","_chestPlateRight","-leggings","-leggingsLeft","-leggingsMiddle","-leggingsRight","_leggings","_leggingsLeft","_leggingsMiddle","_leggingsRight","-bootsLeft","-bootsRight","_bootsLeft","_bootsRight"],hideArmor=new Action("tlm_hide_armor",{name:"切换护甲隐藏",description:"切换护甲隐藏",icon:"visibility",category:"edit",condition:()=>"bedrock_old"===Format.id,click:function(){(IS_TLM_ARMOR_HIDE=!IS_TLM_ARMOR_HIDE)?BarItems.tlm_hide_armor.setIcon("visibility_off"):BarItems.tlm_hide_armor.setIcon("visibility");let e=[],t=[];Group.all.forEach(n=>{armorTlmBone.includes(n.name)&&e.push(n),hideArmorTlmBone.includes(n.name)&&t.push(n),"_helmet"===n.name&&console.log(t)}),e.forEach(e=>{e.select(),Cube.selected.forEach(e=>{e.visibility=!IS_TLM_ARMOR_HIDE})}),t.forEach(e=>{e.select(),Cube.selected.forEach(e=>{e.visibility=IS_TLM_ARMOR_HIDE})}),Canvas.updateVisibility()}}),rotateArray=new Action("rotation_array_tlm_delete",{icon:"content_copy",category:"edit",name:"旋转阵列",label:"用来旋转阵列模型",condition:()=>Modes.edit&&(selected.length||Group.selected)&&"bedrock_old"===Format.id,click:function(){rotationArrayDialog.show()}}),rotationArrayDialog=new Dialog({id:"rotation_array_dialog",title:"旋转阵列",form:{count:{type:"number",label:"阵列个数",value:5,min:1,max:31,step:1},deg:{type:"number",label:"偏转角度",value:60,min:0,max:360},axis:{type:"select",label:"旋转轴",default:0,options:{0:"X 轴",1:"Y 轴",2:"Z 轴"}}},onConfirm:function(e){let t=e.count,n=e.deg,i=e.axis;if(Group.selected&&(Group.selected.matchesSelection()||0===selected.length)){let e=Group.selected.rotation[i],o=Group.selected;Undo.initEdit({outliner:!0,elements:[],selection:!0});let a=elements.length;for(let a=1;a<t+1;a++){o.duplicate().rotation[i]=Math.trimDeg(e+a*n)}Undo.finishEdit("rotation_array",{outliner:!0,elements:elements.slice().slice(a),selection:!0})}Canvas.updateAll(),rotationArrayDialog.hide()}});Plugin.register(tlmUtilsPackageJsonInfo.name,{title:"车万女仆模组插件",author:tlmUtilsPackageJsonInfo.author,description:"专门为车万女仆模组制作模型包所设计的插件。",about:'<hr>\n        <p>感谢你使用 Blockbench 车万女仆模组插件 1.0.3 版本，此插件专为车万女仆模组制作资源包所设计，欢迎您反馈使用过程中的意见和建议。</p>\n        <p>期望大家能够在创作自己喜爱的事物中，收获到更多的快乐。</p>\n        <p>下附一首我很喜欢的一首名为《金木犀》的曲子：</p>\n        <br>\n        <p align="center">\n        <iframe \n        frameborder="no" border="0" marginwidth="0" \n        marginheight="0" width=350 height=133 \n        src="https://music.163.com/outchain/player?type=2&id=41554447&auto=0&height=133">\n        </iframe>\n        <p>\n        <br>',icon:"card_membership",version:tlmUtilsPackageJsonInfo.version,variant:"desktop",onload(){Language.data["menu.tlm_bar_menu"]="车万女仆",new BarMenu("tlm_bar_menu",["create_default_maid_model","_","create_new_pack","export_pack","load_pack","_",{name:"帮助",id:"tlm_help",icon:"help",children:["open_wiki_url","open_mcbbs_url"]}]),MenuBar.update(),registerTextureEvent(),Group.prototype.menu.structure.push("_"),Group.prototype.menu.structure.push(rotateArray),Group.prototype.menu.structure.push("_"),Group.prototype.menu.structure.push(addSkirtMenu),Group.prototype.menu.structure.push(addSkirt2Menu),Group.prototype.menu.structure.push(addRibbonMenu),Group.prototype.menu.structure.push(addPolygonMenu),Group.prototype.menu.structure.push(addBoneMenu),Interface.Panels.outliner.menu.structure.push("_"),Interface.Panels.outliner.menu.structure.push(addSkirtMenu),Interface.Panels.outliner.menu.structure.push(addSkirt2Menu),Interface.Panels.outliner.menu.structure.push(addRibbonMenu),Interface.Panels.outliner.menu.structure.push(addPolygonMenu),Interface.Panels.outliner.menu.structure.push(addBoneMenu),Toolbars.outliner.add(hideArmor,-1)},onunload(){function e(e){for(let t=0;t<e.length;t++)e[t]&&(e[t].is_tlm_add_menu||e[t].id&&e[t].id.endsWith("tlm_delete"))&&delete e[t]}delete MenuBar.menues.tlm_bar_menu,MenuBar.update(),removeTextureEvent(),createNewPack.delete(),exportPack.delete(),loadPack.delete(),createDefaultMaidModel.delete(),openWikiUrl.delete(),openMcbbsUrl.delete(),hideArmor.delete(),rotateArray.delete(),e(Group.prototype.menu.structure),e(Interface.Panels.outliner.menu.structure)}});
